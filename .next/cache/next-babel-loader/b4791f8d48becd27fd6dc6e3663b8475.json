{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Study\\\\J2S-Dev\\\\next-ssr\\\\pages\\\\robots.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Robots = function Robots(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"Robots\"), __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, \"Home\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, props.robots.map(function (robot) {\n    return __jsx(\"li\", {\n      key: robot.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }\n    }, __jsx(Link, {\n      href: \"robots/\".concat(robot.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 29\n      }\n    }, robot.name)));\n  })));\n};\n\n_c = Robots;\nRobots.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/users');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Robots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Robots\");","map":{"version":3,"sources":["D:/Study/J2S-Dev/next-ssr/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","name","getInitialProps","res","json","data","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WAClB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAM,MAAA,IAAI,mBAAYD,KAAK,CAACC,EAAlB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACE,IAAV,CADJ,CADA,CADkB;AAAA,GAAtB,CAFR,CALJ,CADJ;AAmBH,CApBD;;KAAMN,M;AAsBNA,MAAM,CAACO,eAAP,yEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACHR,KAAK,CAAC,4CAAD,CADF;;AAAA;AACfS,UAAAA,GADe;AAAA;AAAA,iBAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfC,UAAAA,IAFe;AAGrBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAHqB,2CAId;AACHR,YAAAA,MAAM,EAAEQ;AADL,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AASA,eAAeV,MAAf","sourcesContent":["import Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Robots = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>Robots</h1>\r\n            <Link href='/'>\r\n                <button>Home</button>\r\n            </Link>\r\n            <div>\r\n                {\r\n                    props.robots.map(robot=>(\r\n                        <li key={robot.id}>\r\n                        <Link href={`robots/${robot.id}`}>\r\n                            <a>{robot.name}</a>                            \r\n                        </Link>    \r\n                        </li>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nRobots.getInitialProps = async function(){\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/users');\r\n    const data = await res.json();\r\n    console.log(data);\r\n    return {\r\n        robots: data\r\n    }\r\n}\r\n\r\nexport default Robots;"]},"metadata":{},"sourceType":"module"}